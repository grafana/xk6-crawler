# File generated by cdo from CONTRIBUTING.md; DO NOT EDIT.

SHELL=bash
.SHELLFLAGS=-e -o pipefail -c

.PHONY: __help__
__help__:
	@echo 'Usage: make [target]'
	@echo ''
	@echo 'Targets:'
	@echo '  all      Clean build'
	@echo '  build    Build custom k6 with extension'
	@echo '  clean    Clean the working directory'
	@echo '  coverage View the test coverage report'
	@echo '  example  Run the example'
	@echo '  format   Format the go source codes'
	@echo '  lint     Run the linter'
	@echo '  makefile Generate the Makefile'
	@echo '  readme   Update README.md'
	@echo '  test     Run the tests'
	@echo '  tools    Install the required tools'

# Clean build
.PHONY: all
all: clean format test build

# Build custom k6 with extension
.PHONY: build
build: 
	@(\
		xk6 build --with github.com/grafana/xk6-crawler=.;\
	)

# Clean the working directory
.PHONY: clean
clean: 
	@(\
		rm -f ./k6;\
	)

# View the test coverage report
.PHONY: coverage
coverage: test
	@(\
		go tool cover -html=coverage.out;\
	)

# Run the example
.PHONY: example
example: 
	@(\
		./k6 run -q examples/example.js  > examples/example.txt 2>&1;\
	)

# Format the go source codes
.PHONY: format
format: 
	@(\
		go fmt ./...;\
	)

# Run the linter
.PHONY: lint
lint: 
	@(\
		golangci-lint run;\
	)

# Generate the Makefile
.PHONY: makefile
makefile: 
	@(\
		cdo --makefile Makefile;\
	)

# Update README.md
.PHONY: readme
readme: 
	@(\
		mdcode update;\
		mdcode update examples/README.md;\
	)

# Run the tests
.PHONY: test
test: 
	@(\
		go test -count 1 -race -coverprofile=coverage.out -timeout 60s ./...;\
	)

# Install the required tools
.PHONY: tools
tools: 
	@(\
		eget szkiba/mdcode;\
		eget golangci/golangci-lint;\
		eget grafana/xk6;\
	)

